yogar-cbmc (atgc-count):
This product includes software developed by Daniel Kroening, Edmund Clarke, 
Computer Science Department, University of Oxford 
Computer Science Department, Carnegie Mellon University
CBMC version 4.9 64-bit linux
file atgc-count.c: Parsing
file <command-line> line 0: <command-line>:0:0: warning: "__STDC_VERSION__" redefined
file <command-line> line 0: <built-in>: note: this is the location of the previous definition
Converting
Type-checking atgc-count
file atgc-count.c line 51 function thread: function `c::printf' is not declared
Generating GOTO Program
Adding CPROVER library
file <command-line> line 0: <command-line>:0:0: warning: "__STDC_VERSION__" redefined
file <command-line> line 0: <built-in>: note: this is the location of the previous definition
Function Pointer Removal
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
--unwind 2
Unwinding loop c::main.0 iteration 1 (2 max) file atgc-count.c line 90 function main thread 0
Not unwinding loop c::main.0 iteration 2 (2 max) file atgc-count.c line 90 function main thread 0
Unwinding loop c::main.1 iteration 1 (2 max) file atgc-count.c line 136 function main thread 0
Not unwinding loop c::main.1 iteration 2 (2 max) file atgc-count.c line 136 function main thread 0
Unwinding loop c::thread.0 iteration 1 (2 max) file atgc-count.c line 40 function thread thread 1
Not unwinding loop c::thread.0 iteration 2 (2 max) file atgc-count.c line 40 function thread thread 1
Unwinding loop c::thread.0 iteration 1 (2 max) file atgc-count.c line 40 function thread thread 2
Not unwinding loop c::thread.0 iteration 2 (2 max) file atgc-count.c line 40 function thread thread 2
Adding SC constraints
Shared c::__CPROVER_threads_exited: 2R/1W
Shared c::__CPROVER_next_thread_id: 3R/3W
Shared c::idcount: 4R/3W
Shared c::result: 4R/3W
Shared c::target: 2R/2W
Shared c::sequence: 4R/2W
reads num: 19
writes num: 14
432 steps
432 steps
440 steps
size of program expression: 440 steps
no slicing due to threads
Generated 4 VCC(s), 4 remaining after simplification
4 =======
num = 1
Passing problem to propositional reduction
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.0 with simplifier
1269 variables, 1873 clauses
SAT checker inconsistent: negated claim is UNSATISFIABLE, i.e., holds
Runtime decision procedure: 0.002s
VERIFICATION SUCCESSFUL
0.47user 0.05system 0:00.53elapsed 99%CPU (0avgtext+0avgdata 31344maxresident)k
0inputs+24outputs (0major+17909minor)pagefaults 0swaps
